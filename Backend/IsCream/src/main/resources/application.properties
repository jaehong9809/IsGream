spring.application.name=IsCream

# Database Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

spring.jpa.show-sql=true

# Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JWT Configuration
spring.auth.jwt.secretKey=${JWT_SECRET_KEY}
spring.auth.jwt.refreshTokenExpiry=${JWT_REFRESH_EXPIRY}
spring.auth.jwt.accessTokenExpiry=${JWT_ACCESS_EXPIRY}

# AWS S3 Configuration
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
cloud.aws.s3.bucket=${AWS_S3_BUCKET}
cloud.aws.region.static=${AWS_REGION}
cloud.aws.stack.auto=false
spring.cloud.aws.s3.enabled=false

s3.upload.folder.image=images/
s3.upload.folder.result=result/
s3.upload.file.url=https://${AWS_S3_BUCKET}.s3.${AWS_REGION}.amazonaws.com/

# File Upload Configurations
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE}

# Redis Configuration
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

# OAuth Google Configuration
spring.security.oauth2.client.registration.google.client-name=${GOOGLE_CLIENT_NAME}
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.authorization-grant-type=${GOOGLE_GRANT_TYPE}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE}

# Spring MVC Path
spring.mvc.servlet.path=${SPRING_MVC_PATH}
