# Application Configuration
spring.application.name=IsCream
spring.mvc.servlet.path=/api

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# MongoDB Configuration
spring.data.mongodb.uri=mongodb://${SPRING_DATA_MONGODB_USERNAME}:${SPRING_DATA_MONGODB_PASSWORD}@${SPRING_DATA_MONGODB_HOST}:${SPRING_DATA_MONGODB_PORT}/${SPRING_DATA_MONGODB_DBNAME}?authSource=admin

# JPA & Hibernate Configuration
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}

# JWT Authentication
spring.auth.jwt.secretKey=${SPRING_AUTH_JWT_SECRET_KEY}
spring.auth.jwt.refreshTokenExpiry=${SPRING_AUTH_JWT_REFRESH_TOKEN_EXPIRY}
spring.auth.jwt.accessTokenExpiry=${SPRING_AUTH_JWT_ACCESS_TOKEN_EXPIRY}

# AWS S3 Configuration
cloud.aws.credentials.access-key=${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${CLOUD_AWS_CREDENTIALS_SECRET_KEY}
cloud.aws.s3.bucket=${CLOUD_AWS_S3_BUCKET}
cloud.aws.region.static=${CLOUD_AWS_REGION_STATIC}
cloud.aws.stack.auto=${CLOUD_AWS_STACK_AUTO}
spring.cloud.aws.s3.enabled=${SPRING_CLOUD_AWS_S3_ENABLED}

# S3 Upload Paths
s3.upload.folder.image=${S3_UPLOAD_FOLDER_IMAGE}
s3.upload.folder.result=${S3_UPLOAD_FOLDER_RESULT}
s3.upload.file.url=${S3_UPLOAD_FILE_URL}

# Multipart File Configuration (? ???)
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# Redis Configuration
spring.data.redis.host=${SPRING_DATA_REDIS_HOST}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT}
spring.data.redis.password=${SPRING_DATA_REDIS_PASSWORD}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-name=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_NAME}
spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.authorization-grant-type=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.google.scope=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE}

firebase.config.base64=${FIREBASE_CONFIG_BASE64}